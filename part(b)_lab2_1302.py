# -*- coding: utf-8 -*-
"""Part(B)_Lab2_1302

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/106MjqmgyXCz6Jw_ZmJY5Q9I_vObKGINW

**Q2. (50 points) Implement function wordcount() that takes a string, and returns the frequency of each word as a dictionary.
Note:**
- You should ignore the uppercase and lowercase. For example, 'Unicode' and 'unicode' are considered as the same word.
- The punctuations and digits should NOT be counted. You only need to consider these punctuations: (),.!?'/\[]"
"""

def validate(sentence):
  # create a method to remove special characters from the sentence the user inputs
  valid_sentence = ""
  # we want to initialise an empty string to store the valids
  ignored_char = ["(", ")", ",", ".", "!", "?", "\'", "/", "[", "]","*", "\""]
  # these are the characters that we want to ignore
  for char in sentence:
    # iterate through the characters in the user inputted sentece
    if char not in ignored_char:
      # if the character is not a special character
      valid_sentence += char
      # add the character to valid_sentence
  return valid_sentence
  # return the sentence with no special characters
  # notice " " whitespaces were not included in our special characters, this is because our 'valid_sentece'
  # would be a string of all the non-special characters in the initial sentence, leaving us with a dictionary
  # with one 'word' with a frequency 1, which is not what we are looking for
  # we will be left with a sentece containing only whitespaces, words, and numbers

def find_digits(word):
  # create a method to find the digits within the sentence provided by the user
  for char in word:
    # iterate through the character in each word of sentence
    if not char.isdigit():
      # if the character is not a digit
      return False
  # if the character is a digit
  return True

def wordcount(sentence):
  # create a method to find frequencies of the valid sentence with no digits or special characters
  words = sentence.lower().split(" ")
  # split the words with a white space
  d = {}
  # create an empty dictionary to store the words found and their frequencies
  for word in words:
    # iterate through the split up sentence (i.e. look at the each word as an element)
    if find_digits(word):
      # if the 'word' in words is a digit, move on
      pass
    else: 
      # if the word is not a digit
      if word in d:
        # if the word is already in our dictionary
        # increment the count of the frequency of word by 1
        d[word] += 1
      else: 
        # if this is the first occurrence of the word
        # set the frequency of the word to 1
        d[word] = 1
  if d == {}:
    # if by the end of the program we have an empty dictionary still
    # we must have had no valid input
    print("There were no valid words in the string you entered.")
  else:
    # if the dictionary is not empty, print out the dictionary with words found and their respective frequencies
    print(d)


sentence = input("Please enter a string. We can then put the valid words and their frequencies into a dictionary!\n")
# ask the user for a sentence, this may contain all and any characters, its up to them
result = ''.join(i for i in sentence if not i.isdigit())
# remove the digits from the sentence, this removes the 3 in hell3o for example
wordcount(validate(result))
# run 'result' through the methods to find words and their frequencies